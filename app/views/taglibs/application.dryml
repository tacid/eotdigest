<!-- this file is included by front_site.dryml, admin_site.dryml et al, so
you can place common code in this file. -->
<def attrs='label, in-place, image, confirm, fade, subsite' tag='delete-link'><%
  url = object_url(this, method: :delete, subsite: subsite )
  if url && can_delete?
    in_place = !(this == @this && request.method.downcase == "get") if in_place.nil?
    update_attrs, attributes = attributes.partition_hash(HoboRapidHelper::AJAX_UPDATE_ATTRS)
    ajax_attrs, attributes = attributes.partition_hash(HoboRapidHelper::AJAX_ATTRS)
    if image
      attributes[:src] ||= image_path(image)
      attributes[:type] ||= 'image'
    else
      attributes[:type] ||= 'submit'
    end
    label ||= t("hobo.actions.remove", :default=>"Remove")
    confirm = t("hobo.messages.confirm", :default=>"Are you sure?") if confirm.nil?
    ajax_attrs[:confirm] = confirm if confirm

    add_classes!(attributes,
                 image ? "image-button" : "button",
                 "delete-button delete-#{this.class.name.underscore.dasherize}-button")

    if in_place && update_attrs.blank?
      data_rapid = data_rapid(:delete_button)
      ajax_attrs[:update] ||= ""   # force form ajax
    elsif !update_attrs.blank?
      ajax_attrs.merge!(update_attrs)
      data_rapid = nil
    else
      data_rapid = nil
    end
  end
%>
  <if test='&url && can_delete?'>
    <form class="button_to delete-#{this.class.name.underscore.dasherize}-form" method='delete' action='&url' merge-attrs='&amp;ajax_attrs' data-rapid='&data_rapid' data-rapid-context='&typed_id' style="display:inline;">
      <a href="#" onClick="$(this).parents('form').submit(); return false;" merge><i class="icon-trash"> </i></a>
    </form>
  </if>
</def>

<%# displays the pencil and trash can icons used by the bootstrap index page. %>
<def tag="bootstrap-table-actions">
  <do with="&this_parent">
    <a action="edit" if="&can_edit?" param="edit"><i class="icon icon-edit"> </i></a>
  </do>
  <% if can_delete?(this_parent) %>
    <delete-link with="&this_parent"/>
  <% end %>
</def>

<def tag="input" for="datetime">
  <bootstrap-datetimepicker merge/>
</def>

<def attrs='name, value' tag='bootstrap-datetimepicker'>
  <%
    options, attrs = attributes.partition_hash(['format', 'weekstart', 'language', 'autoclose'])

    options["autoclose"] ||= "true"
    options["format"] ||= begin
      d=I18n.t(:"time.formats.default")
      {"%Y" => "yyyy",
       "%y" => "yy",
       "%m" => "mm",
       "%_m" => "m",
       "%-m" => "m",
       "%B" => "MM",
       "%^B" => "MM",
       "%b" => "M",
       "%^b" => "M",
       "%h" => "M",
       "%a" => "ddd",
       "%d" => "dd",
       "%-d" => "d",
       "%j" => "oo",
       "%H" => "hh",
       "%M" => "ii",
       "%S" => "ss",
       "%z" => "Z",
       "%D" => "mm/dd/yy",
       "%F" => "yy-mm-dd",
       "%x" => "mm/dd/yy"}.each {|rb, js| d.gsub!(rb,js)}
     d
    end

    if this && value.nil? && (this.acts_like?(:time) or this.acts_list?(:date))
      value = I18n.l(this)
    end

  %>
  <input name='#{name}' data-date-weekstart='#{options[&apos;weekstart&apos;]}' data-date-language='#{options[&apos;language&apos;]}' class='bootstrap-datetimepicker' data-date-autoclose='#{options[&apos;autoclose&apos;]}' merge-attrs value='&value' type='text' data-date-format='#{options[&apos;format&apos;]}'/>
</def>
